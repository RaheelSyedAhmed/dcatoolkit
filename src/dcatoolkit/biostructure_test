import numpy as np
import pandas as pd
from scipy.spatial.distance import cdist

import biotite.structure as struc
import biotite.structure.io.pdbx as pdbx
import biotite.structure.io.pdb as pdb
import biotite.database.rcsb as rcsb
from biotite.sequence import ProteinSequence

from collections.abc import Iterable
from typing import Optional, Union, Literal, overload
import numpy.typing as npt

fetched_data = rcsb.fetch("3d7i", "mmcif")
pdbx_file = pdbx.CIFFile.read(fetched_data)
print(pdbx.get_structure(pdbx_file=pdbx_file, model=1, use_author_fields=False).get_annotation_categories)

# struc_1pzs = StructureInformation.fetch_pdb("3ddv", "mmcif")
# valid_res = struc_1pzs.get_valid_chain_residues('A', False)
# for index, aa in valid_res:
#     print(index, aa)

# print(type(valid_res[0][1]))
# print(struc_1pzs.get_non_missing_sequence("A"))
# for i in range(10):
#     print(valid_res.pop(3-1))

# struc_1pzs = StructureInformation.fetch_pdb("3ddv", "pdb")
# valid_res = struc_1pzs.get_valid_chain_residues('A')
# for index, aa in valid_res:
#     print(index, aa)

#print(StructureInformation.fetch_pdb("6AVJ", "mmcif").get_start_res_id('A', True))
struc_3d7i = StructureInformation.fetch_pdb("3d7i", "mmcif")
valid_residues_3d7i_A = struc_3d7i.get_valid_chain_residues('A', auth_seq_id=False)
print(valid_residues_3d7i_A)

# print([1,2,3].pop(2))
#print(struc_3d7i.get_non_missing_sequence('A'))
# Convert text to list variant for iteration
#print(ResidueAlignment("3d7i", "sods", 10, 3, "gmkvvkekypdlydiivklndtvftgktldyktqkliaigivasrcdevaiekqmksamkelgitkeeiadvlrvvlltsgmpaftkamkilekl", "G-KVVAAAYPDLYDIIVKLNDTVFTGKTLDYKTQKLIAIGIVASRCDEVAIEKQ-KSA-KELGITKEEIADVLRVVLLTSG-PAFTKA-KILEKL", struc_3d7i.get_valid_chain_residues('A')))
#print(ResidueAlignment('GntR', '3ddv', 173, 59, 'kighsnqtisavqaseqiaeyleikrgdailrvrqvsyfenglpfeyvrtqyagsrfefylek', 'KIGHSNQTISAVQASEQIAEYLEIKRGDAILRVRQVSYFENGLPFEYVRTQYAGSRFEFYLEK', StructureInformation.fetch_pdb('3ddv', 'pdb').get_valid_chain_residues('A')))